// -----------------------------------------------------------------------------
// This file contains CSS helper classes.
// -----------------------------------------------------------------------------

/**
 * Clear inner floats
 */
.clearfix::after {
  clear: both;
  content: '';
  display: table;
}

/**
 * Main content containers
 * 1. Make the container full-width with a maximum width
 * 2. Center it in the viewport
 * 3. Leave some space on the edges, especially valuable on small screens
 */
@mixin container {
  max-width: 1440px; /* 1 */
  margin-left: auto; /* 2 */
  margin-right: auto; /* 2 */
  width: 100%; /* 1 */

  @media screen and (max-width: map-get($media-queries, desktop-min)) {
    padding: 0 20px;
    width: unset;
  }
}

body {
  font-family: $font, sans-serif;
  font-weight: 400;
  /*font-size: 16px;*/
  line-height: 1.7;
  color: var(--tertiary-800);
  background-color: var(--neutral-300);
}


/**
 * Hide text while making it readable for screen readers
 * 1. Needed in WebKit-based browsers because of an implementation bug;
 *    See: https://code.google.com/p/chromium/issues/detail?id=457146
 */
.hide-text {
  overflow: hidden;
  padding: 0; /* 1 */
  text-indent: 101%;
  white-space: nowrap;
}

/**
 * Hide element while making it readable for screen readers
 * Shamelessly borrowed from HTML5Boilerplate:
 * https://github.com/h5bp/html5-boilerplate/blob/master/src/css/main.css#L119-L133
 */
.visually-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

.bold-text {
    font-weight: 600;
}

.flex-break {
  flex-basis: 100%;
  height: 0;
}


$grid-columns-rows-values: (
        '1': repeat(1, minmax(0, 1fr)),
        '2': repeat(2, minmax(0, 1fr)),
        '3': repeat(3, minmax(0, 1fr)),
        '4': repeat(4, minmax(0, 1fr)),
        '5': repeat(5, minmax(0, 1fr)),
        '6': repeat(6, minmax(0, 1fr)),
        '7': repeat(7, minmax(0, 1fr)),
        '8': repeat(8, minmax(0, 1fr)),
        '9': repeat(9, minmax(0, 1fr)),
        '10': repeat(10, minmax(0, 1fr)),
        '11': repeat(11, minmax(0, 1fr)),
        '12': repeat(12, minmax(0, 1fr))
);

// grid span values
$grid-span-values: (
        '1': span 1,
        '2': span 2,
        '3': span 3,
        '4': span 4,
        '5': span 5,
        '6': span 6,
        '7': span 7,
        '8': span 8,
        '9': span 9,
        '10': span 10,
        '11': span 11,
        '12': span 12
);
